
MIP3_AVR_minutka_casovac_Vavrinak.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000424  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000020  00800060  00000424  000004b8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000007  00800080  00800080  000004d8  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000004d8  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000508  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000040  00000000  00000000  00000544  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000947  00000000  00000000  00000584  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000680  00000000  00000000  00000ecb  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000047c  00000000  00000000  0000154b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000bc  00000000  00000000  000019c8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000438  00000000  00000000  00001a84  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000002ac  00000000  00000000  00001ebc  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000030  00000000  00000000  00002168  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 2e 01 	jmp	0x25c	; 0x25c <__vector_7>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 9d 00 	jmp	0x13a	; 0x13a <__vector_11>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e4 e2       	ldi	r30, 0x24	; 36
  68:	f4 e0       	ldi	r31, 0x04	; 4
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a0 38       	cpi	r26, 0x80	; 128
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	a0 e8       	ldi	r26, 0x80	; 128
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a7 38       	cpi	r26, 0x87	; 135
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 3d 01 	call	0x27a	; 0x27a <main>
  8a:	0c 94 10 02 	jmp	0x420	; 0x420 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <_Z12zobraz_cislohh>:
const uint8_t pozice[] = {1, 2, 4, 8};

// Zobrazí aktuální èíslo z mapy na požadované pozici
void zobraz_cislo(uint8_t poz, uint8_t cis)
{
	PORTD = ~(pozice[poz]);
  92:	e8 2f       	mov	r30, r24
  94:	f0 e0       	ldi	r31, 0x00	; 0
  96:	e0 59       	subi	r30, 0x90	; 144
  98:	ff 4f       	sbci	r31, 0xFF	; 255
  9a:	80 81       	ld	r24, Z
  9c:	80 95       	com	r24
  9e:	82 bb       	out	0x12, r24	; 18
	PORTA = mapa_znaku[cis];
  a0:	e6 2f       	mov	r30, r22
  a2:	f0 e0       	ldi	r31, 0x00	; 0
  a4:	ec 58       	subi	r30, 0x8C	; 140
  a6:	ff 4f       	sbci	r31, 0xFF	; 255
  a8:	80 81       	ld	r24, Z
  aa:	8b bb       	out	0x1b, r24	; 27
  ac:	08 95       	ret

000000ae <_Z14cti_klavesniciv>:
// Funkce prochází všechny sloupce a ktivuje na nich 0
// následì prochází všechny øádky a pokud najde schodu
// vrátí stisknutou klávesu podle mapy, pokud žádná není stisknuta vrací 99
int cti_klavesnici() 
{	
	for (int s = 0; s < 4; s++)
  ae:	e0 e0       	ldi	r30, 0x00	; 0
  b0:	f0 e0       	ldi	r31, 0x00	; 0
  b2:	e4 30       	cpi	r30, 0x04	; 4
  b4:	f1 05       	cpc	r31, r1
  b6:	f4 f5       	brge	.+124    	; 0x134 <_Z14cti_klavesniciv+0x86>
	{
		PORTC = ~(1 << s);
  b8:	81 e0       	ldi	r24, 0x01	; 1
  ba:	90 e0       	ldi	r25, 0x00	; 0
  bc:	0e 2e       	mov	r0, r30
  be:	02 c0       	rjmp	.+4      	; 0xc4 <_Z14cti_klavesniciv+0x16>
  c0:	88 0f       	add	r24, r24
  c2:	99 1f       	adc	r25, r25
  c4:	0a 94       	dec	r0
  c6:	e2 f7       	brpl	.-8      	; 0xc0 <_Z14cti_klavesniciv+0x12>
  c8:	80 95       	com	r24
  ca:	85 bb       	out	0x15, r24	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  cc:	8f e9       	ldi	r24, 0x9F	; 159
  ce:	9f e0       	ldi	r25, 0x0F	; 15
  d0:	01 97       	sbiw	r24, 0x01	; 1
  d2:	f1 f7       	brne	.-4      	; 0xd0 <_Z14cti_klavesniciv+0x22>
  d4:	00 c0       	rjmp	.+0      	; 0xd6 <_Z14cti_klavesniciv+0x28>
  d6:	00 00       	nop
		_delay_ms(1);
		for (int r = 0; r < 4; r++)
  d8:	60 e0       	ldi	r22, 0x00	; 0
  da:	70 e0       	ldi	r23, 0x00	; 0
  dc:	64 30       	cpi	r22, 0x04	; 4
  de:	71 05       	cpc	r23, r1
  e0:	3c f5       	brge	.+78     	; 0x130 <_Z14cti_klavesniciv+0x82>
		{
			if (((~PINC)&(16 << r))>0 )
  e2:	43 b3       	in	r20, 0x13	; 19
  e4:	80 e1       	ldi	r24, 0x10	; 16
  e6:	90 e0       	ldi	r25, 0x00	; 0
  e8:	9c 01       	movw	r18, r24
  ea:	06 2e       	mov	r0, r22
  ec:	02 c0       	rjmp	.+4      	; 0xf2 <_Z14cti_klavesniciv+0x44>
  ee:	22 0f       	add	r18, r18
  f0:	33 1f       	adc	r19, r19
  f2:	0a 94       	dec	r0
  f4:	e2 f7       	brpl	.-8      	; 0xee <_Z14cti_klavesniciv+0x40>
  f6:	84 2f       	mov	r24, r20
  f8:	90 e0       	ldi	r25, 0x00	; 0
  fa:	80 95       	com	r24
  fc:	90 95       	com	r25
  fe:	82 23       	and	r24, r18
 100:	93 23       	and	r25, r19
 102:	18 16       	cp	r1, r24
 104:	19 06       	cpc	r1, r25
 106:	8c f4       	brge	.+34     	; 0x12a <_Z14cti_klavesniciv+0x7c>
 108:	8f e9       	ldi	r24, 0x9F	; 159
 10a:	9f e0       	ldi	r25, 0x0F	; 15
 10c:	01 97       	sbiw	r24, 0x01	; 1
 10e:	f1 f7       	brne	.-4      	; 0x10c <_Z14cti_klavesniciv+0x5e>
 110:	00 c0       	rjmp	.+0      	; 0x112 <_Z14cti_klavesniciv+0x64>
 112:	00 00       	nop
			{
				_delay_ms(1);
				return mapa_klaves[r][s];
 114:	66 0f       	add	r22, r22
 116:	77 1f       	adc	r23, r23
 118:	66 0f       	add	r22, r22
 11a:	77 1f       	adc	r23, r23
 11c:	60 5a       	subi	r22, 0xA0	; 160
 11e:	7f 4f       	sbci	r23, 0xFF	; 255
 120:	e6 0f       	add	r30, r22
 122:	f7 1f       	adc	r31, r23
 124:	80 81       	ld	r24, Z
 126:	90 e0       	ldi	r25, 0x00	; 0
 128:	08 95       	ret
{	
	for (int s = 0; s < 4; s++)
	{
		PORTC = ~(1 << s);
		_delay_ms(1);
		for (int r = 0; r < 4; r++)
 12a:	6f 5f       	subi	r22, 0xFF	; 255
 12c:	7f 4f       	sbci	r23, 0xFF	; 255
 12e:	d6 cf       	rjmp	.-84     	; 0xdc <_Z14cti_klavesniciv+0x2e>
// Funkce prochází všechny sloupce a ktivuje na nich 0
// následì prochází všechny øádky a pokud najde schodu
// vrátí stisknutou klávesu podle mapy, pokud žádná není stisknuta vrací 99
int cti_klavesnici() 
{	
	for (int s = 0; s < 4; s++)
 130:	31 96       	adiw	r30, 0x01	; 1
 132:	bf cf       	rjmp	.-130    	; 0xb2 <_Z14cti_klavesniciv+0x4>
				_delay_ms(1);
				return mapa_klaves[r][s];
			}
		}
	}
	return 99; // není nic stisknuto
 134:	83 e6       	ldi	r24, 0x63	; 99
 136:	90 e0       	ldi	r25, 0x00	; 0
}
 138:	08 95       	ret

0000013a <__vector_11>:

// Funkce rozdìlí minuty a sekundy a zobrazí je na jednotlivých segmentech
ISR(TIMER0_OVF_vect) {
 13a:	1f 92       	push	r1
 13c:	0f 92       	push	r0
 13e:	0f b6       	in	r0, 0x3f	; 63
 140:	0f 92       	push	r0
 142:	11 24       	eor	r1, r1
 144:	2f 93       	push	r18
 146:	3f 93       	push	r19
 148:	4f 93       	push	r20
 14a:	5f 93       	push	r21
 14c:	6f 93       	push	r22
 14e:	7f 93       	push	r23
 150:	8f 93       	push	r24
 152:	9f 93       	push	r25
 154:	af 93       	push	r26
 156:	bf 93       	push	r27
 158:	ef 93       	push	r30
 15a:	ff 93       	push	r31
	switch (i_poz)
 15c:	80 91 85 00 	lds	r24, 0x0085	; 0x800085 <i_poz>
 160:	81 30       	cpi	r24, 0x01	; 1
 162:	d9 f0       	breq	.+54     	; 0x19a <__vector_11+0x60>
 164:	30 f0       	brcs	.+12     	; 0x172 <__vector_11+0x38>
 166:	82 30       	cpi	r24, 0x02	; 2
 168:	91 f1       	breq	.+100    	; 0x1ce <__vector_11+0x94>
 16a:	83 30       	cpi	r24, 0x03	; 3
 16c:	09 f4       	brne	.+2      	; 0x170 <__vector_11+0x36>
 16e:	43 c0       	rjmp	.+134    	; 0x1f6 <__vector_11+0xbc>
 170:	5b c0       	rjmp	.+182    	; 0x228 <__vector_11+0xee>
	{
		// pozice nejvíce v pravo
		case 0:
		zobraz_cislo(0, sekundy %10);
 172:	90 91 83 00 	lds	r25, 0x0083	; 0x800083 <sekundy>
 176:	6d ec       	ldi	r22, 0xCD	; 205
 178:	96 9f       	mul	r25, r22
 17a:	61 2d       	mov	r22, r1
 17c:	11 24       	eor	r1, r1
 17e:	66 95       	lsr	r22
 180:	66 95       	lsr	r22
 182:	66 95       	lsr	r22
 184:	66 0f       	add	r22, r22
 186:	86 2f       	mov	r24, r22
 188:	88 0f       	add	r24, r24
 18a:	88 0f       	add	r24, r24
 18c:	68 0f       	add	r22, r24
 18e:	96 1b       	sub	r25, r22
 190:	69 2f       	mov	r22, r25
 192:	80 e0       	ldi	r24, 0x00	; 0
 194:	0e 94 49 00 	call	0x92	; 0x92 <_Z12zobraz_cislohh>
		break;
 198:	47 c0       	rjmp	.+142    	; 0x228 <__vector_11+0xee>
		case 1:
		zobraz_cislo(1, (sekundy/10) %10);
 19a:	80 91 83 00 	lds	r24, 0x0083	; 0x800083 <sekundy>
 19e:	6d ec       	ldi	r22, 0xCD	; 205
 1a0:	86 9f       	mul	r24, r22
 1a2:	81 2d       	mov	r24, r1
 1a4:	11 24       	eor	r1, r1
 1a6:	86 95       	lsr	r24
 1a8:	86 95       	lsr	r24
 1aa:	86 95       	lsr	r24
 1ac:	86 9f       	mul	r24, r22
 1ae:	61 2d       	mov	r22, r1
 1b0:	11 24       	eor	r1, r1
 1b2:	66 95       	lsr	r22
 1b4:	66 95       	lsr	r22
 1b6:	66 95       	lsr	r22
 1b8:	66 0f       	add	r22, r22
 1ba:	96 2f       	mov	r25, r22
 1bc:	99 0f       	add	r25, r25
 1be:	99 0f       	add	r25, r25
 1c0:	69 0f       	add	r22, r25
 1c2:	86 1b       	sub	r24, r22
 1c4:	68 2f       	mov	r22, r24
 1c6:	81 e0       	ldi	r24, 0x01	; 1
 1c8:	0e 94 49 00 	call	0x92	; 0x92 <_Z12zobraz_cislohh>
		break;
 1cc:	2d c0       	rjmp	.+90     	; 0x228 <__vector_11+0xee>
		case 2:
		zobraz_cislo(2, minuty %10);
 1ce:	90 91 84 00 	lds	r25, 0x0084	; 0x800084 <minuty>
 1d2:	6d ec       	ldi	r22, 0xCD	; 205
 1d4:	96 9f       	mul	r25, r22
 1d6:	61 2d       	mov	r22, r1
 1d8:	11 24       	eor	r1, r1
 1da:	66 95       	lsr	r22
 1dc:	66 95       	lsr	r22
 1de:	66 95       	lsr	r22
 1e0:	66 0f       	add	r22, r22
 1e2:	86 2f       	mov	r24, r22
 1e4:	88 0f       	add	r24, r24
 1e6:	88 0f       	add	r24, r24
 1e8:	68 0f       	add	r22, r24
 1ea:	96 1b       	sub	r25, r22
 1ec:	69 2f       	mov	r22, r25
 1ee:	82 e0       	ldi	r24, 0x02	; 2
 1f0:	0e 94 49 00 	call	0x92	; 0x92 <_Z12zobraz_cislohh>
		break;
 1f4:	19 c0       	rjmp	.+50     	; 0x228 <__vector_11+0xee>
		// pozice nejvíce v levo
		case 3:
		zobraz_cislo(3, (minuty/10) %10);
 1f6:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <minuty>
 1fa:	6d ec       	ldi	r22, 0xCD	; 205
 1fc:	86 9f       	mul	r24, r22
 1fe:	81 2d       	mov	r24, r1
 200:	11 24       	eor	r1, r1
 202:	86 95       	lsr	r24
 204:	86 95       	lsr	r24
 206:	86 95       	lsr	r24
 208:	86 9f       	mul	r24, r22
 20a:	61 2d       	mov	r22, r1
 20c:	11 24       	eor	r1, r1
 20e:	66 95       	lsr	r22
 210:	66 95       	lsr	r22
 212:	66 95       	lsr	r22
 214:	66 0f       	add	r22, r22
 216:	96 2f       	mov	r25, r22
 218:	99 0f       	add	r25, r25
 21a:	99 0f       	add	r25, r25
 21c:	69 0f       	add	r22, r25
 21e:	86 1b       	sub	r24, r22
 220:	68 2f       	mov	r22, r24
 222:	83 e0       	ldi	r24, 0x03	; 3
 224:	0e 94 49 00 	call	0x92	; 0x92 <_Z12zobraz_cislohh>
		break;
	}
	// postupnì prochází všechny pozice 1-4
	i_poz++;
 228:	80 91 85 00 	lds	r24, 0x0085	; 0x800085 <i_poz>
 22c:	8f 5f       	subi	r24, 0xFF	; 255
 22e:	80 93 85 00 	sts	0x0085, r24	; 0x800085 <i_poz>
	if (i_poz > 3)
 232:	84 30       	cpi	r24, 0x04	; 4
 234:	10 f0       	brcs	.+4      	; 0x23a <__vector_11+0x100>
	{
		i_poz = 0;
 236:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <i_poz>
	}
}
 23a:	ff 91       	pop	r31
 23c:	ef 91       	pop	r30
 23e:	bf 91       	pop	r27
 240:	af 91       	pop	r26
 242:	9f 91       	pop	r25
 244:	8f 91       	pop	r24
 246:	7f 91       	pop	r23
 248:	6f 91       	pop	r22
 24a:	5f 91       	pop	r21
 24c:	4f 91       	pop	r20
 24e:	3f 91       	pop	r19
 250:	2f 91       	pop	r18
 252:	0f 90       	pop	r0
 254:	0f be       	out	0x3f, r0	; 63
 256:	0f 90       	pop	r0
 258:	1f 90       	pop	r1
 25a:	18 95       	reti

0000025c <__vector_7>:

// Jakmile upline 1s nastaví se pžíznak na 1
ISR(TIMER1_COMPA_vect) {
 25c:	1f 92       	push	r1
 25e:	0f 92       	push	r0
 260:	0f b6       	in	r0, 0x3f	; 63
 262:	0f 92       	push	r0
 264:	11 24       	eor	r1, r1
 266:	8f 93       	push	r24
	priznak_sekundy = 1;
 268:	81 e0       	ldi	r24, 0x01	; 1
 26a:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <priznak_sekundy>
}
 26e:	8f 91       	pop	r24
 270:	0f 90       	pop	r0
 272:	0f be       	out	0x3f, r0	; 63
 274:	0f 90       	pop	r0
 276:	1f 90       	pop	r1
 278:	18 95       	reti

0000027a <main>:

int main(void)
{
    DDRA = 0b11111111; // segmenty
 27a:	8f ef       	ldi	r24, 0xFF	; 255
 27c:	8a bb       	out	0x1a, r24	; 26
	DDRD = 0b00001111; // pozice
 27e:	9f e0       	ldi	r25, 0x0F	; 15
 280:	91 bb       	out	0x11, r25	; 17
	DDRC = 0b00001111; // klavesnic vstup/výstup
 282:	94 bb       	out	0x14, r25	; 20
	PORTC = 0b11110000; // klavesnice pull-up
 284:	90 ef       	ldi	r25, 0xF0	; 240
 286:	95 bb       	out	0x15, r25	; 21
	DDRB = 0b11111111;	// ledky
 288:	87 bb       	out	0x17, r24	; 23
	PORTB = 0b11111111;	// ledky pull-up
 28a:	88 bb       	out	0x18, r24	; 24
	
	// nastavení èasovaèe 0
	TCCR0 = (1 << CS02);
 28c:	84 e0       	ldi	r24, 0x04	; 4
 28e:	83 bf       	out	0x33, r24	; 51
	TIMSK |= (1 << TOIE0);
 290:	89 b7       	in	r24, 0x39	; 57
 292:	81 60       	ori	r24, 0x01	; 1
 294:	89 bf       	out	0x39, r24	; 57
	// nastavení èasovaèe 1
	TCCR1B = (1 << WGM12) | (1 << CS12) | (1 << CS10);
 296:	8d e0       	ldi	r24, 0x0D	; 13
 298:	8e bd       	out	0x2e, r24	; 46
	OCR1A = 15624;
 29a:	88 e0       	ldi	r24, 0x08	; 8
 29c:	9d e3       	ldi	r25, 0x3D	; 61
 29e:	9b bd       	out	0x2b, r25	; 43
 2a0:	8a bd       	out	0x2a, r24	; 42
	TIMSK |= (1 << OCIE1A);
 2a2:	89 b7       	in	r24, 0x39	; 57
 2a4:	80 61       	ori	r24, 0x10	; 16
 2a6:	89 bf       	out	0x39, r24	; 57
	// povolení pøerušení
	sei();
 2a8:	78 94       	sei
	
    while (1) 
    {	
		// Povolí nastavovani
		if (cti_klavesnici() == 10) // A
 2aa:	0e 94 57 00 	call	0xae	; 0xae <_Z14cti_klavesniciv>
 2ae:	0a 97       	sbiw	r24, 0x0a	; 10
 2b0:	41 f4       	brne	.+16     	; 0x2c2 <main+0x48>
		{
			nastavovani = true;
 2b2:	81 e0       	ldi	r24, 0x01	; 1
 2b4:	80 93 82 00 	sts	0x0082, r24	; 0x800082 <nastavovani>
			while (cti_klavesnici() != 99);	// øeší aby nedocházelo k opìtovnému stisku pøi držení
 2b8:	0e 94 57 00 	call	0xae	; 0xae <_Z14cti_klavesniciv>
 2bc:	83 36       	cpi	r24, 0x63	; 99
 2be:	91 05       	cpc	r25, r1
 2c0:	d9 f7       	brne	.-10     	; 0x2b8 <main+0x3e>
		}
		
		// Zakaze nastavovani
		if (cti_klavesnici() == 11) // B
 2c2:	0e 94 57 00 	call	0xae	; 0xae <_Z14cti_klavesniciv>
 2c6:	0b 97       	sbiw	r24, 0x0b	; 11
 2c8:	39 f4       	brne	.+14     	; 0x2d8 <main+0x5e>
		{
			nastavovani = false;
 2ca:	10 92 82 00 	sts	0x0082, r1	; 0x800082 <nastavovani>
			while (cti_klavesnici() != 99);	// øeší aby nedocházelo k opìtovnému stisku pøi držení
 2ce:	0e 94 57 00 	call	0xae	; 0xae <_Z14cti_klavesniciv>
 2d2:	83 36       	cpi	r24, 0x63	; 99
 2d4:	91 05       	cpc	r25, r1
 2d6:	d9 f7       	brne	.-10     	; 0x2ce <main+0x54>
		}

		if (nastavovani == true)
 2d8:	80 91 82 00 	lds	r24, 0x0082	; 0x800082 <nastavovani>
 2dc:	88 23       	and	r24, r24
 2de:	49 f1       	breq	.+82     	; 0x332 <main+0xb8>
		{
			// inkrementace minut - 1
			if (cti_klavesnici() == 1)
 2e0:	0e 94 57 00 	call	0xae	; 0xae <_Z14cti_klavesniciv>
 2e4:	01 97       	sbiw	r24, 0x01	; 1
 2e6:	51 f4       	brne	.+20     	; 0x2fc <main+0x82>
			{
				minuty++;
 2e8:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <minuty>
 2ec:	8f 5f       	subi	r24, 0xFF	; 255
 2ee:	80 93 84 00 	sts	0x0084, r24	; 0x800084 <minuty>
				while (cti_klavesnici() != 99);	// øeší aby nedocházelo k opìtovnému stisku pøi držení
 2f2:	0e 94 57 00 	call	0xae	; 0xae <_Z14cti_klavesniciv>
 2f6:	83 36       	cpi	r24, 0x63	; 99
 2f8:	91 05       	cpc	r25, r1
 2fa:	d9 f7       	brne	.-10     	; 0x2f2 <main+0x78>
			}
			// inkrementace sekund - 3
			if (cti_klavesnici() == 3)
 2fc:	0e 94 57 00 	call	0xae	; 0xae <_Z14cti_klavesniciv>
 300:	03 97       	sbiw	r24, 0x03	; 3
 302:	51 f4       	brne	.+20     	; 0x318 <main+0x9e>
			{
				sekundy++;
 304:	80 91 83 00 	lds	r24, 0x0083	; 0x800083 <sekundy>
 308:	8f 5f       	subi	r24, 0xFF	; 255
 30a:	80 93 83 00 	sts	0x0083, r24	; 0x800083 <sekundy>
				while (cti_klavesnici() != 99);	// øeší aby nedocházelo k opìtovnému stisku pøi držení
 30e:	0e 94 57 00 	call	0xae	; 0xae <_Z14cti_klavesniciv>
 312:	83 36       	cpi	r24, 0x63	; 99
 314:	91 05       	cpc	r25, r1
 316:	d9 f7       	brne	.-10     	; 0x30e <main+0x94>
			}
			// nastavení nul
			if (cti_klavesnici() == 0)
 318:	0e 94 57 00 	call	0xae	; 0xae <_Z14cti_klavesniciv>
 31c:	89 2b       	or	r24, r25
 31e:	49 f4       	brne	.+18     	; 0x332 <main+0xb8>
			{
				minuty = 0;
 320:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <minuty>
				sekundy = 0;
 324:	10 92 83 00 	sts	0x0083, r1	; 0x800083 <sekundy>
				while (cti_klavesnici() != 99);	// øeší aby nedocházelo k opìtovnému stisku pøi držení
 328:	0e 94 57 00 	call	0xae	; 0xae <_Z14cti_klavesniciv>
 32c:	83 36       	cpi	r24, 0x63	; 99
 32e:	91 05       	cpc	r25, r1
 330:	d9 f7       	brne	.-10     	; 0x328 <main+0xae>
			}
		}
		
		// povolí spuštìní odpoètu pokud není v režimu nastavování
		if (nastavovani == false)
 332:	80 91 82 00 	lds	r24, 0x0082	; 0x800082 <nastavovani>
 336:	81 11       	cpse	r24, r1
 338:	17 c0       	rjmp	.+46     	; 0x368 <main+0xee>
		{
			if (cti_klavesnici() == 15) //D - SUPSTENI
 33a:	0e 94 57 00 	call	0xae	; 0xae <_Z14cti_klavesniciv>
 33e:	0f 97       	sbiw	r24, 0x0f	; 15
 340:	41 f4       	brne	.+16     	; 0x352 <main+0xd8>
			{
				bezi_odpocet = true;
 342:	81 e0       	ldi	r24, 0x01	; 1
 344:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <bezi_odpocet>

				while (cti_klavesnici() != 99);	// øeší aby nedocházelo k opìtovnému stisku pøi držení
 348:	0e 94 57 00 	call	0xae	; 0xae <_Z14cti_klavesniciv>
 34c:	83 36       	cpi	r24, 0x63	; 99
 34e:	91 05       	cpc	r25, r1
 350:	d9 f7       	brne	.-10     	; 0x348 <main+0xce>
			}

			if (cti_klavesnici() == 12) //C - POZASTAVENI
 352:	0e 94 57 00 	call	0xae	; 0xae <_Z14cti_klavesniciv>
 356:	0c 97       	sbiw	r24, 0x0c	; 12
 358:	39 f4       	brne	.+14     	; 0x368 <main+0xee>
			{
				bezi_odpocet = false;
 35a:	10 92 81 00 	sts	0x0081, r1	; 0x800081 <bezi_odpocet>
				while (cti_klavesnici() != 99);	// øeší aby nedocházelo k opìtovnému stisku pøi držení
 35e:	0e 94 57 00 	call	0xae	; 0xae <_Z14cti_klavesniciv>
 362:	83 36       	cpi	r24, 0x63	; 99
 364:	91 05       	cpc	r25, r1
 366:	d9 f7       	brne	.-10     	; 0x35e <main+0xe4>
			}
		}
		
		// logika odpoètu
		if (bezi_odpocet == true)
 368:	80 91 81 00 	lds	r24, 0x0081	; 0x800081 <bezi_odpocet>
 36c:	88 23       	and	r24, r24
 36e:	b9 f1       	breq	.+110    	; 0x3de <main+0x164>
		{
			while(priznak_sekundy)
 370:	80 91 86 00 	lds	r24, 0x0086	; 0x800086 <priznak_sekundy>
 374:	88 23       	and	r24, r24
 376:	41 f0       	breq	.+16     	; 0x388 <main+0x10e>
			{
				sekundy--;
 378:	80 91 83 00 	lds	r24, 0x0083	; 0x800083 <sekundy>
 37c:	81 50       	subi	r24, 0x01	; 1
 37e:	80 93 83 00 	sts	0x0083, r24	; 0x800083 <sekundy>
				priznak_sekundy = 0;
 382:	10 92 86 00 	sts	0x0086, r1	; 0x800086 <priznak_sekundy>
		}
		
		// logika odpoètu
		if (bezi_odpocet == true)
		{
			while(priznak_sekundy)
 386:	f4 cf       	rjmp	.-24     	; 0x370 <main+0xf6>
			{
				sekundy--;
				priznak_sekundy = 0;
			}
			if ((sekundy > 60) & (minuty > 0))
 388:	90 91 83 00 	lds	r25, 0x0083	; 0x800083 <sekundy>
 38c:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <minuty>
 390:	21 e0       	ldi	r18, 0x01	; 1
 392:	9d 33       	cpi	r25, 0x3D	; 61
 394:	08 f4       	brcc	.+2      	; 0x398 <main+0x11e>
 396:	20 e0       	ldi	r18, 0x00	; 0
 398:	22 23       	and	r18, r18
 39a:	49 f0       	breq	.+18     	; 0x3ae <main+0x134>
 39c:	21 e0       	ldi	r18, 0x01	; 1
 39e:	81 11       	cpse	r24, r1
 3a0:	01 c0       	rjmp	.+2      	; 0x3a4 <main+0x12a>
 3a2:	20 e0       	ldi	r18, 0x00	; 0
 3a4:	22 23       	and	r18, r18
 3a6:	19 f0       	breq	.+6      	; 0x3ae <main+0x134>
			{
				minuty--;
 3a8:	81 50       	subi	r24, 0x01	; 1
 3aa:	80 93 84 00 	sts	0x0084, r24	; 0x800084 <minuty>
			}
			if ((sekundy > 60))
 3ae:	9d 33       	cpi	r25, 0x3D	; 61
 3b0:	18 f0       	brcs	.+6      	; 0x3b8 <main+0x13e>
			{
				sekundy = 59;
 3b2:	8b e3       	ldi	r24, 0x3B	; 59
 3b4:	80 93 83 00 	sts	0x0083, r24	; 0x800083 <sekundy>
			}
			if ((sekundy == 0) & (minuty == 0))
 3b8:	81 e0       	ldi	r24, 0x01	; 1
 3ba:	90 91 83 00 	lds	r25, 0x0083	; 0x800083 <sekundy>
 3be:	91 11       	cpse	r25, r1
 3c0:	80 e0       	ldi	r24, 0x00	; 0
 3c2:	88 23       	and	r24, r24
 3c4:	61 f0       	breq	.+24     	; 0x3de <main+0x164>
 3c6:	81 e0       	ldi	r24, 0x01	; 1
 3c8:	90 91 84 00 	lds	r25, 0x0084	; 0x800084 <minuty>
 3cc:	91 11       	cpse	r25, r1
 3ce:	80 e0       	ldi	r24, 0x00	; 0
 3d0:	88 23       	and	r24, r24
 3d2:	29 f0       	breq	.+10     	; 0x3de <main+0x164>
			{
				bezi_odpocet = false;
 3d4:	10 92 81 00 	sts	0x0081, r1	; 0x800081 <bezi_odpocet>
				blik = true;
 3d8:	81 e0       	ldi	r24, 0x01	; 1
 3da:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__data_end>
			}
		}
		
		// signalizuje odpoèet blikáním LEDek
		while (blik == true)
 3de:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__data_end>
 3e2:	88 23       	and	r24, r24
 3e4:	09 f4       	brne	.+2      	; 0x3e8 <main+0x16e>
 3e6:	61 cf       	rjmp	.-318    	; 0x2aa <main+0x30>
		{
			PORTB = 0b00000000;
 3e8:	18 ba       	out	0x18, r1	; 24
 3ea:	2f ef       	ldi	r18, 0xFF	; 255
 3ec:	81 ee       	ldi	r24, 0xE1	; 225
 3ee:	94 e0       	ldi	r25, 0x04	; 4
 3f0:	21 50       	subi	r18, 0x01	; 1
 3f2:	80 40       	sbci	r24, 0x00	; 0
 3f4:	90 40       	sbci	r25, 0x00	; 0
 3f6:	e1 f7       	brne	.-8      	; 0x3f0 <main+0x176>
 3f8:	00 c0       	rjmp	.+0      	; 0x3fa <main+0x180>
 3fa:	00 00       	nop
			_delay_ms(100);
			PORTB = 0b11111111;
 3fc:	8f ef       	ldi	r24, 0xFF	; 255
 3fe:	88 bb       	out	0x18, r24	; 24
 400:	2f ef       	ldi	r18, 0xFF	; 255
 402:	81 ee       	ldi	r24, 0xE1	; 225
 404:	94 e0       	ldi	r25, 0x04	; 4
 406:	21 50       	subi	r18, 0x01	; 1
 408:	80 40       	sbci	r24, 0x00	; 0
 40a:	90 40       	sbci	r25, 0x00	; 0
 40c:	e1 f7       	brne	.-8      	; 0x406 <__EEPROM_REGION_LENGTH__+0x6>
 40e:	00 c0       	rjmp	.+0      	; 0x410 <__EEPROM_REGION_LENGTH__+0x10>
 410:	00 00       	nop
			_delay_ms(100);

			if (cti_klavesnici() < 20)	// bliká dokud nebude cokoliv stisknuto
 412:	0e 94 57 00 	call	0xae	; 0xae <_Z14cti_klavesniciv>
 416:	44 97       	sbiw	r24, 0x14	; 20
 418:	14 f7       	brge	.-60     	; 0x3de <main+0x164>
			{
				blik = false;
 41a:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__data_end>
 41e:	df cf       	rjmp	.-66     	; 0x3de <main+0x164>

00000420 <_exit>:
 420:	f8 94       	cli

00000422 <__stop_program>:
 422:	ff cf       	rjmp	.-2      	; 0x422 <__stop_program>
